{"version":3,"sources":["../../src/controllers/contourMap_ctrl.js"],"names":["MetricsPanelCtrl","_","d3","L","TileServers","ContourMapCtrl","$scope","$injector","ctrl","events","on","onInitEditMode","bind","onPanelTeardown","onRender","onPanelInitialized","onDataRecieved","onDataError","onRefresh","panel","mapBackgrounds","Object","keys","mapBackground","undefined","tileServer","find","ts","Name","maxZoom","Options","options","minZoom","zoomLevel","lockMap","maxLongitude","maxLatitude","minLatitude","minLongitude","useReferenceValue","referencePointTag","useAngleMean","angleMeanTimeWindow","showLegend","setTimeout","createMap","metaData","data","addEditorTab","console","log","map","off","datasource","getMetaData","x","pointtag","join","then","JSON","parse","each","element","index","list","datam","y","PointTag","datapoints","length","Value","plotSites","plotContour","msg","mapContainer","mapOptions","zoomControl","attributionControl","boxZoom","doubleClickZoom","dragging","zoomDelta","id","tileLayer","url","addTo","updateMapView","event","getZoom","bounds","getBounds","_southWest","lng","_northEast","lat","refresh","radius","stroke","color","weight","opacity","lineCap","lineJoin","dashArray","dashOffset","fill","fillColor","fillOpacity","fillRule","bubblingMouseEvents","renderer","className","circleMarker","Latitude","Longitude","remove","setZoom","fitBounds","markerGroup","featureGroup","circleMarkers","isValid","min","max","step","input","i","push","templateUrl"],"mappings":"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","file":"contourMap_ctrl.js","sourcesContent":["﻿//******************************************************************************************************\r\n//  contourMap_ctrl.ts - Gbtc\r\n//\r\n//  Copyright © 2017, Grid Protection Alliance.  All Rights Reserved.\r\n//\r\n//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See\r\n//  the NOTICE file distributed with this work for additional information regarding copyright ownership.\r\n//  The GPA licenses this file to you under the MIT License (MIT), the \"License\"; you may not use this\r\n//  file except in compliance with the License. You may obtain a copy of the License at:\r\n//\r\n//      http://opensource.org/licenses/MIT\r\n//\r\n//  Unless agreed to in writing, the subject software distributed under the License is distributed on an\r\n//  \"AS-IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the\r\n//  License for the specific language governing permissions and limitations.\r\n//\r\n//  Code Modification History:\r\n//  ----------------------------------------------------------------------------------------------------\r\n//  11/08/2017 - Billy Ernest\r\n//       Generated original version of source code.\r\n//\r\n//******************************************************************************************************\r\n\r\nimport { MetricsPanelCtrl } from 'app/plugins/sdk'\r\n\r\nimport _ from 'lodash';\nimport * as d3 from \"d3\";\n\nimport * as L from './../lib/leaflet';\r\nimport './../css/leaflet.css!';\nimport { TileServers } from './../js/constants';\n//import * as d3Contour from \"d3-contour\";\n\n//import * as d3Scale from \"d3-scale\";\n//import * as d3Color from \"d3-color\";\n//import * as d3Collection from \"d3-collection\";\n\r\nexport class ContourMapCtrl extends MetricsPanelCtrl {\r\n    constructor($scope, $injector) {\r\n        super($scope, $injector);\r\n\r\n        var ctrl = this;\r\n\r\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n        this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\r\n        this.events.on('render', this.onRender.bind(this));\r\n        this.events.on('panel-initialized', this.onPanelInitialized.bind(this));\r\n        this.events.on('data-received', this.onDataRecieved.bind(this));\r\n        //this.events.on('data-snapshot-load', console.log('data-snapshot-load'));\r\n        this.events.on('data-error', this.onDataError.bind(this));\r\n        this.events.on('refresh', this.onRefresh.bind(this));\n\r\n\r\n        // Variables for options\r\n        ctrl.panel.mapBackgrounds = Object.keys(TileServers);\r\n        ctrl.panel.mapBackground = (ctrl.panel.mapBackground != undefined ? ctrl.panel.mapBackground : ctrl.panel.mapBackgrounds[0]);\r\n        ctrl.panel.tileServer = _.find(TileServers, function (ts) { return ts.Name == ctrl.panel.mapBackground;});\r\n        ctrl.panel.maxZoom = (ctrl.panel.tileServer.Options.options.maxZoom != undefined ? ctrl.panel.tileServer.Options.options.maxZoom : 18)\r\n        ctrl.panel.minZoom = (ctrl.panel.tileServer.Options.options.minZoom != undefined ? ctrl.panel.tileServer.Options.options.minZoom : 2)\r\n        ctrl.panel.zoomLevel = (ctrl.panel.zoomLevel != undefined ? ctrl.panel.zoomLevel : ctrl.panel.tileServer.Options.options.maxZoom);\r\n        ctrl.panel.lockMap = (ctrl.panel.lockMap != undefined ? ctrl.panel.lockMap : 'No');\r\n        ctrl.panel.maxLongitude = (ctrl.panel.maxLongitude != undefined ? ctrl.panel.maxLongitude : -125);\r\n        ctrl.panel.maxLatitude = (ctrl.panel.maxLatitude != undefined ? ctrl.panel.maxLatitude : 24);\r\n        ctrl.panel.minLatitude = (ctrl.panel.minLatitude != undefined ? ctrl.panel.minLatitude : 50);\r\n        ctrl.panel.minLongitude = (ctrl.panel.minLongitude != undefined ? ctrl.panel.minLongitude : -66);\r\n        ctrl.panel.useReferenceValue = (ctrl.panel.useReferenceValue != undefined ? ctrl.panel.useReferenceValue : false);\r\n        ctrl.panel.referencePointTag = (ctrl.panel.referencePointTag != undefined ? ctrl.panel.referencePointTag : '');\r\n        ctrl.panel.useAngleMean = (ctrl.panel.useAngleMean != undefined ? ctrl.panel.useAngleMean : false);\r\n        ctrl.panel.angleMeanTimeWindow = (ctrl.panel.angleMeanTimeWindow != undefined ? ctrl.panel.angleMeanTimeWindow : '5');\r\n        ctrl.panel.showLegend = (ctrl.panel.showLegend != undefined ? ctrl.panel.showLegend : false);\r\n\r\n        setTimeout(function () {\r\n            ctrl.createMap();\r\n        }, 300);\r\n\r\n        ctrl.metaData = null;\r\n        ctrl.data = [];\r\n\r\n\r\n    }\r\n\r\n    // #region Events from Graphana Handlers\r\n    onInitEditMode() {\r\n        this.addEditorTab('Options', 'public/plugins/gridprotectionalliance-contourmap-panel/partials/editor.html', 2);\n        console.log('init-edit-mode');\r\n    }\r\n\r\n    onPanelTeardown() {\r\n        if (this.map) {\r\n            this.map.off('zoomend');\r\n            this.map.off('moveend');\r\n        }\r\n        console.log('panel-teardown');\r\n    }\r\n\r\n    onPanelInitialized() {\r\n        console.log('panel-initialized');\r\n    }\r\n\r\n    onRefresh() {\n        //var ctrl = this;\n\n        //if (ctrl.height > ctrl.row.height) ctrl.render();\n\n        console.log('refresh');\r\n    }\n\n    onResize() {\n        var ctrl = this;\n        console.log('refresh');\r\n    }\n\n    onRender() {\n        console.log('render');\r\n    }\n\n    onDataRecieved(data) {\n        var ctrl = this;\n\n        if (ctrl.metaData == null) {\n            ctrl.datasource.getMetaData(data.map(function(x) { return \"'\" + x.pointtag + \"'\"; }).join(',')).then(function (metaData) {\n                ctrl.metaData = JSON.parse(metaData.data);\n                _.each(ctrl.metaData, function (element, index, list) {\n                    var datam = _.find(data, function (y) {\n                        return element.PointTag == y.pointtag\n                    });\n\n                    if (datam.datapoints.length > 0)\n                        element.Value = datam.datapoints[datam.datapoints.length - 1][0];\n                });\n                ctrl.plotSites();\n                ctrl.plotContour();\n\n            })\n        }\n        else {\n            _.each(ctrl.metaData, function (element, index, list) {\n                var datam = _.find(data, function(x) {\n                    return element.pointtag == data.pointtag\n                });\n\n                if (datam.datapoints.length > 0)\n                    element.Value = datam.datapoints[datam.datapoints.length - 1][0];\n            });\n            ctrl.plotContour();\n        }\n\n    }\n\n    onDataError(msg) {\n        console.log('data-error');\r\n    }\n    // #endregion\n\r\n    // #region Map and Marker Creation\r\n    createMap() {\r\n        var ctrl = this;\r\n\r\n        if (ctrl.$scope.mapContainer == null) {\r\n\r\n            var mapOptions = {\r\n                zoomControl: false,\r\n                attributionControl: false,\r\n                boxZoom: false,\r\n                doubleClickZoom: false,\r\n                dragging: (ctrl.panel.lockMap == 'No'),\r\n                zoomDelta: (ctrl.panel.lockMap == 'No' ? 1 : 0),\r\n                minZoom: (ctrl.panel.lockMap == 'No' ? ctrl.panel.minZoom : ctrl.panel.zoomLevel),\r\n                maxZoom: (ctrl.panel.lockMap == 'No' ? ctrl.panel.maxZoom : ctrl.panel.zoomLevel)\r\n            };\r\n\r\n            ctrl.$scope.mapContainer = L.map('mapid_' + ctrl.panel.id, mapOptions);\r\n            ctrl.$scope.tileLayer = L.tileLayer(ctrl.panel.tileServer.Options.url, ctrl.panel.tileServer.Options.options);\r\n            ctrl.$scope.tileLayer.addTo(ctrl.$scope.mapContainer);\r\n            ctrl.updateMapView();\r\n\r\n            // setup map listeners\r\n            ctrl.$scope.mapContainer.off('zoomend');\r\n            ctrl.$scope.mapContainer.on('zoomend', function (event) {\r\n                ctrl.panel.zoomLevel = ctrl.$scope.mapContainer.getZoom();\r\n\r\n                var bounds = ctrl.$scope.mapContainer.getBounds();\r\n                ctrl.panel.maxLongitude = bounds._southWest.lng;\r\n                ctrl.panel.maxLatitude = bounds._northEast.lat;\r\n                ctrl.panel.minLatitude = bounds._southWest.lat;\r\n                ctrl.panel.minLongitude = bounds._northEast.lng;\r\n\r\n                ctrl.refresh();\r\n            });\r\n            ctrl.$scope.mapContainer.off('moveend');\r\n            ctrl.$scope.mapContainer.on('moveend', function (event) {\r\n                ctrl.panel.zoomLevel = ctrl.$scope.mapContainer.getZoom();\r\n\r\n                var bounds = ctrl.$scope.mapContainer.getBounds();\r\n                ctrl.panel.maxLongitude = bounds._southWest.lng;\r\n                ctrl.panel.maxLatitude = bounds._northEast.lat;\r\n                ctrl.panel.minLatitude = bounds._southWest.lat;\r\n                ctrl.panel.minLongitude = bounds._northEast.lng;\r\n\r\n                ctrl.refresh();\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    plotSites() {\r\n        var ctrl = this;\r\n        var options = {\r\n            radius: 10,             // Radius of the circle marker, in pixels\r\n            stroke: true,           // Whether to draw stroke along the path. Set it to false to disable borders on polygons or circles.\r\n            color: '#3388ff',       // Stroke color\r\n            weight: 3,              // Stroke width in pixels\r\n            opacity: 1.0,           // Stroke opacity\r\n            lineCap: 'round',       // A string that defines shape to be used at the end of the stroke.\r\n            lineJoin: 'round',      // A string that defines shape to be used at the corners of the stroke.\r\n            dashArray: null,        // A string that defines the stroke dash pattern. Doesn't work on Canvas-powered layers in some old browsers.\r\n            dashOffset: null,       // A string that defines the distance into the dash pattern to start the dash. Doesn't work on Canvas-powered layers in some old browsers.\r\n            fill: true,             // Whether to fill the path with color. Set it to false to disable filling on polygons or circles.\r\n            fillColor: '#3388ff',   // Fill color. Defaults to the value of the color option\r\n            fillOpacity: 0.2,       // Fill opacity.\r\n            fillRule: 'evenodd',    // A string that defines how the inside of a shape is determined.\r\n            bubblingMouseEvents: true,  // When true, a mouse event on this path will trigger the same event on the map (unless L.DomEvent.stopPropagation is used).\r\n            renderer: null,         // Use this specific instance of Renderer for this path. Takes precedence over the map's default renderer.\r\n            className: null         // \tCustom class name set on an element. Only for SVG renderer.\r\n        };\r\n        _.each(ctrl.metaData, function (element, index, list) {\r\n            L.circleMarker([element.Latitude, element.Longitude], options).addTo(ctrl.$scope.mapContainer)\r\n        });\r\n    }\r\n\r\n    plotContour() {\r\n        //var values = new Array(parseInt((n * m).toFixed(0))),\r\n        //    m = $(this.$scope.mapContainer._container).height(),\r\n        //    n = $(this.$scope.mapContainer._container).width();\r\n\r\n        //values.fill(2);\r\n\r\n        //var color = d3.scaleSequential(d3.interpolateMagma)\r\n        //    .domain(d3.extent(values));\r\n\r\n        //var contours = d3Contour.contours()\r\n        //    .size([n, m])\r\n        //    .smooth(false)\r\n        //    .thresholds(20);\r\n\r\n        //d3.select(\"svg\")\r\n        //    .attr(\"viewBox\", [0, 0, n, m])\r\n        //    .selectAll(\"path\")\r\n        //    .data(contours(values))\r\n        //    .enter().append(\"path\")\r\n        //    .attr(\"d\", d3.geoPath())\r\n        //    .attr(\"fill\", function (d) { return color(d.value); });\r\n    }\r\n    // #endregion\r\n\r\n    // #region Options Functions\r\n    changeMapBackground() {\r\n        var ctrl = this;\r\n\r\n        ctrl.$scope.tileLayer.remove();\r\n        ctrl.$scope.tileLayer = L.tileLayer(ctrl.panel.tileServer.Options.url, ctrl.panel.tileServer.Options.options);\r\n        ctrl.$scope.tileLayer.addTo(this.$scope.mapContainer);\r\n    }\r\n\r\n    updateZoom() {\r\n        var ctrl = this;\r\n\r\n        ctrl.$scope.mapContainer.options.minZoom = (ctrl.panel.lockMap == 'No' ? ctrl.panel.minZoom : ctrl.panel.zoomLevel);\r\n        ctrl.$scope.mapContainer.options.maxZoom = (ctrl.panel.lockMap == 'No' ? ctrl.panel.maxZoom : ctrl.panel.zoomLevel);\r\n\r\n        ctrl.$scope.mapContainer.setZoom(ctrl.panel.zoomLevel);\r\n    }\r\n\r\n    updateMapView() {\r\n        var ctrl = this;\r\n\r\n        ctrl.$scope.mapContainer.fitBounds([\r\n            [ctrl.panel.maxLatitude, ctrl.panel.maxLongitude],\r\n            [ctrl.panel.minLatitude, ctrl.panel.minLongitude]\r\n        ]);\r\n    }\r\n\r\n    lockMap() {\r\n        var ctrl = this;\r\n\r\n        ctrl.$scope.mapContainer.remove();\r\n        ctrl.$scope.mapContainer = null;\r\n        ctrl.createMap();\r\n    }\r\n\r\n    boundToMarkers() {\r\n        var ctrl = this;\r\n\r\n        var markerGroup = new L.featureGroup(ctrl.$scope.circleMarkers);\r\n        if (markerGroup.getBounds().isValid())\r\n            ctrl.$scope.mapContainer.fitBounds(markerGroup.getBounds());\r\n\r\n        var bounds = ctrl.$scope.mapContainer.getBounds();\r\n        ctrl.panel.maxLongitude = bounds._southWest.lng;\r\n        ctrl.panel.maxLatitude = bounds._northEast.lat;\r\n        ctrl.panel.minLatitude = bounds._southWest.lat;\r\n        ctrl.panel.minLongitude = bounds._northEast.lng;\r\n    }\r\n    //#endregion\r\n\r\n    // #region Angular Tag Functions\r\n    getRange(min, max, step) {\r\n        step = step || 1;\r\n        var input = [];\r\n        for (var i = min; i <= max; i = i + step) {\r\n            input.push(i);\r\n        }\r\n        return input;\r\n    }\r\n    // #endregion\r\n\r\n}\r\n\r\nContourMapCtrl.templateUrl = 'partials/module.html';\r\n\r\n"]}